name: Generate API Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.test.ts'
      - '**/*.test.js'
      - '**/*.spec.ts'
      - '**/*.spec.js'
      - 'jest-swag.config.*'
      - 'package.json'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Generate API documentation
      run: npx jest-swag generate
    
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: api-docs-${{ matrix.node-version }}
        path: docs/
    
    - name: Deploy to GitHub Pages (main branch only)
      if: github.ref == 'refs/heads/main' && matrix.node-version == '20.x'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        publish_branch: gh-pages
        cname: api-docs.example.com # Optional: your custom domain

  validate-openapi:
    needs: generate-docs
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download documentation artifacts
      uses: actions/download-artifact@v3
      with:
        name: api-docs-20.x
        path: docs/
    
    - name: Validate OpenAPI spec
      uses: char0n/swagger-editor-validate@v1
      with:
        definition-file: docs/openapi.json
    
    - name: Run API linting
      uses: stoplightio/spectral-action@latest
      with:
        file_glob: 'docs/openapi.json'

  docker-build:
    needs: generate-docs
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download documentation artifacts
      uses: actions/download-artifact@v3
      with:
        name: api-docs-20.x
        path: docs/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.docs
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/api-docs:latest
          ${{ secrets.DOCKER_USERNAME }}/api-docs:${{ github.sha }}

  notify:
    needs: [generate-docs, validate-openapi]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'API Documentation generation ${{ job.status }}'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      if: always()