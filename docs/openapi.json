{
  "openapi": "3.0.3",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "Generated by jest-swag"
  },
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a list of all users in the system",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of users to return",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of users to skip",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                      },
                      "name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "john@example.com"
                      },
                      "age": {
                        "type": "integer",
                        "example": 30
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2024-01-01T00:00:00Z"
                      },
                      "active": {
                        "type": "boolean",
                        "example": true
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "email"
                    ],
                    "example": {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "John Doe",
                      "email": "john@example.com",
                      "age": 30,
                      "createdAt": "2024-01-01T00:00:00Z",
                      "active": true
                    }
                  }
                },
                "example": [
                  {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "John Doe",
                    "email": "john@example.com",
                    "age": 30,
                    "createdAt": "2024-01-01T00:00:00Z",
                    "active": true
                  },
                  {
                    "id": "456e7890-f12b-34c5-d678-901234567890",
                    "name": "Jane Smith",
                    "email": "jane@example.com",
                    "age": 25,
                    "createdAt": "2024-01-02T10:30:00Z",
                    "active": true
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          },
          "200 (1)": {
            "description": "Users with pagination info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "user-123"
                          },
                          "name": {
                            "type": "string",
                            "example": "Alice"
                          },
                          "email": {
                            "type": "string",
                            "example": "alice@example.com"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "example": 100
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "limit": {
                          "type": "integer",
                          "example": 10
                        }
                      }
                    }
                  },
                  "required": [
                    "users",
                    "pagination"
                  ],
                  "example": {
                    "users": [
                      {
                        "id": "user-123",
                        "name": "Alice",
                        "email": "alice@example.com"
                      }
                    ],
                    "pagination": {
                      "total": 100,
                      "page": 1,
                      "limit": 10
                    }
                  }
                }
              }
            }
          },
          "200 (2)": {
            "description": "Empty user list when no users exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      },
                      "example": []
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "example": 0
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "limit": {
                          "type": "integer",
                          "example": 10
                        }
                      }
                    }
                  },
                  "required": [
                    "users",
                    "pagination"
                  ],
                  "example": {
                    "users": [],
                    "pagination": {
                      "total": 0,
                      "page": 1,
                      "limit": 10
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user in the system",
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "age": {
                      "type": "integer",
                      "example": 30
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "active": {
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "email"
                  ],
                  "example": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "John Doe",
                    "email": "john@example.com",
                    "age": 30,
                    "createdAt": "2024-01-01T00:00:00Z",
                    "active": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user data"
          },
          "409": {
            "description": "User already exists"
          }
        },
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "age": {
                    "type": "integer",
                    "example": 30
                  }
                },
                "required": [
                  "name",
                  "email"
                ],
                "example": {
                  "name": "John Doe",
                  "email": "john@example.com",
                  "age": 30
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their unique identifier",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "age": {
                      "type": "integer",
                      "example": 30
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2024-01-01T00:00:00Z"
                    },
                    "active": {
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "email"
                  ],
                  "example": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "John Doe",
                    "email": "john@example.com",
                    "age": 30,
                    "createdAt": "2024-01-01T00:00:00Z",
                    "active": true
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user",
        "description": "Update an existing user's information",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe Updated"
                    },
                    "email": {
                      "type": "string",
                      "example": "john.updated@example.com"
                    },
                    "age": {
                      "type": "integer",
                      "example": 31
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2024-01-15T14:30:00Z"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "email"
                  ],
                  "example": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "John Doe Updated",
                    "email": "john.updated@example.com",
                    "age": 31,
                    "updatedAt": "2024-01-15T14:30:00Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user data"
          },
          "404": {
            "description": "User not found"
          }
        },
        "requestBody": {
          "description": "Updated user data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete a user from the system",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier of the user",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "Cannot delete user with active dependencies"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "Get all posts",
        "description": "Retrieve a paginated list of blog posts",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter by category",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "post-123"
                          },
                          "title": {
                            "type": "string",
                            "example": "My First Post"
                          },
                          "content": {
                            "type": "string",
                            "example": "This is the content..."
                          },
                          "authorId": {
                            "type": "string",
                            "example": "user-123"
                          },
                          "categoryId": {
                            "type": "string",
                            "example": "tech"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "javascript",
                              "web"
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2024-01-01T12:00:00Z"
                          }
                        }
                      },
                      "example": [
                        {
                          "id": "post-123",
                          "title": "My First Post",
                          "content": "This is the content of my first post...",
                          "authorId": "user-123",
                          "categoryId": "tech",
                          "tags": [
                            "javascript",
                            "web"
                          ],
                          "createdAt": "2024-01-01T12:00:00Z"
                        }
                      ]
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 5
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 42
                        },
                        "hasNext": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  },
                  "required": [
                    "posts",
                    "pagination"
                  ],
                  "example": {
                    "posts": [
                      {
                        "id": "post-123",
                        "title": "My First Post",
                        "content": "This is the content of my first post...",
                        "authorId": "user-123",
                        "categoryId": "tech",
                        "tags": [
                          "javascript",
                          "web"
                        ],
                        "createdAt": "2024-01-01T12:00:00Z"
                      }
                    ],
                    "pagination": {
                      "page": 1,
                      "totalPages": 5,
                      "totalItems": 42,
                      "hasNext": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new post",
        "description": "Create a new blog post",
        "tags": [
          "Posts"
        ],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "post-456"
                    },
                    "title": {
                      "type": "string",
                      "example": "My Second Post"
                    },
                    "content": {
                      "type": "string",
                      "example": "This is the content of my post..."
                    },
                    "categoryId": {
                      "type": "string",
                      "example": "tech"
                    },
                    "authorId": {
                      "type": "string",
                      "example": "user-123"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "javascript",
                        "web"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2024-01-15T10:00:00Z"
                    },
                    "status": {
                      "type": "string",
                      "example": "published"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "content",
                    "authorId"
                  ],
                  "example": {
                    "id": "post-456",
                    "title": "My Second Post",
                    "content": "This is the content of my post...",
                    "categoryId": "tech",
                    "authorId": "user-123",
                    "tags": [
                      "javascript",
                      "web"
                    ],
                    "createdAt": "2024-01-15T10:00:00Z",
                    "status": "published"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid post data"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "requestBody": {
          "description": "Blog post content",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "My First Post"
                  },
                  "content": {
                    "type": "string",
                    "example": "This is the content of my post..."
                  },
                  "categoryId": {
                    "type": "string",
                    "example": "tech"
                  },
                  "authorId": {
                    "type": "string",
                    "example": "user-123"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "javascript",
                      "web"
                    ]
                  }
                },
                "required": [
                  "title",
                  "content",
                  "authorId"
                ]
              }
            }
          }
        }
      }
    },
    "/posts/{postId}": {
      "get": {
        "summary": "Get post by ID",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "Post identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "post-789"
                    },
                    "title": {
                      "type": "string",
                      "example": "Amazing Blog Post"
                    },
                    "content": {
                      "type": "string",
                      "example": "This is the full content of the blog post..."
                    },
                    "categoryId": {
                      "type": "string",
                      "example": "tech"
                    },
                    "authorId": {
                      "type": "string",
                      "example": "user-456"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "typescript",
                        "api"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2024-01-10T15:30:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2024-01-12T09:15:00Z"
                    },
                    "status": {
                      "type": "string",
                      "example": "published"
                    },
                    "viewCount": {
                      "type": "integer",
                      "example": 1250
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "content",
                    "authorId"
                  ],
                  "example": {
                    "id": "post-789",
                    "title": "Amazing Blog Post",
                    "content": "This is the full content of the blog post...",
                    "categoryId": "tech",
                    "authorId": "user-456",
                    "tags": [
                      "typescript",
                      "api"
                    ],
                    "createdAt": "2024-01-10T15:30:00Z",
                    "updatedAt": "2024-01-12T09:15:00Z",
                    "status": "published",
                    "viewCount": 1250
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/test": {
      "get": {
        "summary": "Test endpoint",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ]
}